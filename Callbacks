{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPZBlQbySBgMPZYOTcvduzB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xGnJ_12I6HGd","executionInfo":{"status":"ok","timestamp":1701915023874,"user_tz":-540,"elapsed":18498,"user":{"displayName":"김형우","userId":"03499405496807914833"}},"outputId":"97ed570c-04cd-4839-8a02-de1ff93be88f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting dash\n","  Downloading dash-2.14.2-py3-none-any.whl (10.2 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.2/10.2 MB\u001b[0m \u001b[31m42.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: Flask<3.1,>=1.0.4 in /usr/local/lib/python3.10/dist-packages (from dash) (2.2.5)\n","Requirement already satisfied: Werkzeug<3.1 in /usr/local/lib/python3.10/dist-packages (from dash) (3.0.1)\n","Requirement already satisfied: plotly>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from dash) (5.15.0)\n","Collecting dash-html-components==2.0.0 (from dash)\n","  Downloading dash_html_components-2.0.0-py3-none-any.whl (4.1 kB)\n","Collecting dash-core-components==2.0.0 (from dash)\n","  Downloading dash_core_components-2.0.0-py3-none-any.whl (3.8 kB)\n","Collecting dash-table==5.0.0 (from dash)\n","  Downloading dash_table-5.0.0-py3-none-any.whl (3.9 kB)\n","Requirement already satisfied: typing-extensions>=4.1.1 in /usr/local/lib/python3.10/dist-packages (from dash) (4.5.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from dash) (2.31.0)\n","Collecting retrying (from dash)\n","  Downloading retrying-1.3.4-py3-none-any.whl (11 kB)\n","Collecting ansi2html (from dash)\n","  Downloading ansi2html-1.8.0-py3-none-any.whl (16 kB)\n","Requirement already satisfied: nest-asyncio in /usr/local/lib/python3.10/dist-packages (from dash) (1.5.8)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from dash) (67.7.2)\n","Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.10/dist-packages (from dash) (6.8.0)\n","Requirement already satisfied: Jinja2>=3.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash) (3.1.2)\n","Requirement already satisfied: itsdangerous>=2.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash) (2.1.2)\n","Requirement already satisfied: click>=8.0 in /usr/local/lib/python3.10/dist-packages (from Flask<3.1,>=1.0.4->dash) (8.1.7)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly>=5.0.0->dash) (8.2.3)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from plotly>=5.0.0->dash) (23.2)\n","Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from Werkzeug<3.1->dash) (2.1.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.10/dist-packages (from importlib-metadata->dash) (3.17.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (3.6)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->dash) (2023.11.17)\n","Requirement already satisfied: six>=1.7.0 in /usr/local/lib/python3.10/dist-packages (from retrying->dash) (1.16.0)\n","Installing collected packages: dash-table, dash-html-components, dash-core-components, retrying, ansi2html, dash\n","Successfully installed ansi2html-1.8.0 dash-2.14.2 dash-core-components-2.0.0 dash-html-components-2.0.0 dash-table-5.0.0 retrying-1.3.4\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (1.5.3)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.3.post1)\n","Requirement already satisfied: numpy>=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.23.5)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.1->pandas) (1.16.0)\n"]}],"source":["!pip install dash\n","!pip install pandas"]},{"cell_type":"code","source":["from dash import Dash, dcc, html, Input, Output, callback\n","\n","app = Dash(__name__)\n","\n","app.layout = html.Div([\n","    html.H6(\"Change the value in the text box to see callbacks in action!\"),\n","    html.Div([\n","        \"Input: \",\n","        dcc.Input(id='my-input', value='initial value', type='text')\n","    ]),\n","    html.Br(),\n","    html.Div(id='my-output'),\n","\n","])\n","\n","\n","@callback(\n","    Output(component_id='my-output', component_property='children'),\n","    Input(component_id='my-input', component_property='value')\n",")\n","def update_output_div(input_value):\n","    return f'Output: {input_value}'\n","\n","\n","if __name__ == '__main__':\n","    app.run(debug=True)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":670},"id":"Kfb2NHit8v4s","executionInfo":{"status":"ok","timestamp":1701915047049,"user_tz":-540,"elapsed":1152,"user":{"displayName":"김형우","userId":"03499405496807914833"}},"outputId":"2b56c1bb-eb89-4628-b5ae-3bd1e68c4bff"},"execution_count":3,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["(async (port, path, width, height, cache, element) => {\n","    if (!google.colab.kernel.accessAllowed && !cache) {\n","      return;\n","    }\n","    element.appendChild(document.createTextNode(''));\n","    const url = await google.colab.kernel.proxyPort(port, {cache});\n","    const iframe = document.createElement('iframe');\n","    iframe.src = new URL(path, url).toString();\n","    iframe.height = height;\n","    iframe.width = width;\n","    iframe.style.border = 0;\n","    iframe.allow = [\n","        'accelerometer',\n","        'autoplay',\n","        'camera',\n","        'clipboard-read',\n","        'clipboard-write',\n","        'gyroscope',\n","        'magnetometer',\n","        'microphone',\n","        'serial',\n","        'usb',\n","        'xr-spatial-tracking',\n","    ].join('; ');\n","    element.appendChild(iframe);\n","  })(8050, \"/\", \"100%\", 650, false, window.element)"]},"metadata":{}}]},{"cell_type":"code","source":["from dash import Dash, dcc, html, Input, Output, callback\n","import plotly.express as px\n","\n","import pandas as pd\n","\n","df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/gapminderDataFiveYear.csv')\n","\n","app = Dash(__name__)\n","\n","app.layout = html.Div([\n","    dcc.Graph(id='graph-with-slider'),\n","    dcc.Slider(\n","        df['year'].min(),\n","        df['year'].max(),\n","        step=None,\n","        value=df['year'].min(),\n","        marks={str(year): str(year) for year in df['year'].unique()},\n","        id='year-slider'\n","    )\n","])\n","\n","\n","@callback(\n","    Output('graph-with-slider', 'figure'),\n","    Input('year-slider', 'value'))\n","def update_figure(selected_year):\n","    filtered_df = df[df.year == selected_year]\n","\n","    fig = px.scatter(filtered_df, x=\"gdpPercap\", y=\"lifeExp\",\n","                     size=\"pop\", color=\"continent\", hover_name=\"country\",\n","                     log_x=True, size_max=55)\n","\n","    fig.update_layout(transition_duration=500)\n","\n","    return fig\n","\n","\n","if __name__ == '__main__':\n","    app.run(debug=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":670},"id":"mAwjkLnFFpfp","executionInfo":{"status":"ok","timestamp":1701915833688,"user_tz":-540,"elapsed":2374,"user":{"displayName":"김형우","userId":"03499405496807914833"}},"outputId":"18d46baf-2c3d-4913-e105-bb139fb4b803"},"execution_count":4,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["(async (port, path, width, height, cache, element) => {\n","    if (!google.colab.kernel.accessAllowed && !cache) {\n","      return;\n","    }\n","    element.appendChild(document.createTextNode(''));\n","    const url = await google.colab.kernel.proxyPort(port, {cache});\n","    const iframe = document.createElement('iframe');\n","    iframe.src = new URL(path, url).toString();\n","    iframe.height = height;\n","    iframe.width = width;\n","    iframe.style.border = 0;\n","    iframe.allow = [\n","        'accelerometer',\n","        'autoplay',\n","        'camera',\n","        'clipboard-read',\n","        'clipboard-write',\n","        'gyroscope',\n","        'magnetometer',\n","        'microphone',\n","        'serial',\n","        'usb',\n","        'xr-spatial-tracking',\n","    ].join('; ');\n","    element.appendChild(iframe);\n","  })(8050, \"/\", \"100%\", 650, false, window.element)"]},"metadata":{}}]},{"cell_type":"code","source":["from dash import Dash, dcc, html, Input, Output, callback\n","import plotly.express as px\n","\n","import pandas as pd\n","\n","app = Dash(__name__)\n","\n","df = pd.read_csv('https://plotly.github.io/datasets/country_indicators.csv')\n","\n","app.layout = html.Div([\n","    html.Div([\n","\n","        html.Div([\n","            dcc.Dropdown(\n","                df['Indicator Name'].unique(),\n","                'Fertility rate, total (births per woman)',\n","                id='xaxis-column'\n","            ),\n","            dcc.RadioItems(\n","                ['Linear', 'Log'],\n","                'Linear',\n","                id='xaxis-type',\n","                inline=True\n","            )\n","        ], style={'width': '48%', 'display': 'inline-block'}),\n","\n","        html.Div([\n","            dcc.Dropdown(\n","                df['Indicator Name'].unique(),\n","                'Life expectancy at birth, total (years)',\n","                id='yaxis-column'\n","            ),\n","            dcc.RadioItems(\n","                ['Linear', 'Log'],\n","                'Linear',\n","                id='yaxis-type',\n","                inline=True\n","            )\n","        ], style={'width': '48%', 'float': 'right', 'display': 'inline-block'})\n","    ]),\n","\n","    dcc.Graph(id='indicator-graphic'),\n","\n","    dcc.Slider(\n","        df['Year'].min(),\n","        df['Year'].max(),\n","        step=None,\n","        id='year--slider',\n","        value=df['Year'].max(),\n","        marks={str(year): str(year) for year in df['Year'].unique()},\n","\n","    )\n","])\n","\n","\n","@callback(\n","    Output('indicator-graphic', 'figure'),\n","    Input('xaxis-column', 'value'),\n","    Input('yaxis-column', 'value'),\n","    Input('xaxis-type', 'value'),\n","    Input('yaxis-type', 'value'),\n","    Input('year--slider', 'value'))\n","def update_graph(xaxis_column_name, yaxis_column_name,\n","                 xaxis_type, yaxis_type,\n","                 year_value):\n","    dff = df[df['Year'] == year_value]\n","\n","    fig = px.scatter(x=dff[dff['Indicator Name'] == xaxis_column_name]['Value'],\n","                     y=dff[dff['Indicator Name'] == yaxis_column_name]['Value'],\n","                     hover_name=dff[dff['Indicator Name'] == yaxis_column_name]['Country Name'])\n","\n","    fig.update_layout(margin={'l': 40, 'b': 40, 't': 10, 'r': 0}, hovermode='closest')\n","\n","    fig.update_xaxes(title=xaxis_column_name,\n","                     type='linear' if xaxis_type == 'Linear' else 'log')\n","\n","    fig.update_yaxes(title=yaxis_column_name,\n","                     type='linear' if yaxis_type == 'Linear' else 'log')\n","\n","    return fig\n","\n","\n","if __name__ == '__main__':\n","    app.run(debug=True)"],"metadata":{"id":"Q4wg7l8H88_r","colab":{"base_uri":"https://localhost:8080/","height":670},"executionInfo":{"status":"ok","timestamp":1701916390982,"user_tz":-540,"elapsed":764,"user":{"displayName":"김형우","userId":"03499405496807914833"}},"outputId":"7f5d5540-0573-4414-9d96-52abf053b63a"},"execution_count":5,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["(async (port, path, width, height, cache, element) => {\n","    if (!google.colab.kernel.accessAllowed && !cache) {\n","      return;\n","    }\n","    element.appendChild(document.createTextNode(''));\n","    const url = await google.colab.kernel.proxyPort(port, {cache});\n","    const iframe = document.createElement('iframe');\n","    iframe.src = new URL(path, url).toString();\n","    iframe.height = height;\n","    iframe.width = width;\n","    iframe.style.border = 0;\n","    iframe.allow = [\n","        'accelerometer',\n","        'autoplay',\n","        'camera',\n","        'clipboard-read',\n","        'clipboard-write',\n","        'gyroscope',\n","        'magnetometer',\n","        'microphone',\n","        'serial',\n","        'usb',\n","        'xr-spatial-tracking',\n","    ].join('; ');\n","    element.appendChild(iframe);\n","  })(8050, \"/\", \"100%\", 650, false, window.element)"]},"metadata":{}}]},{"cell_type":"code","source":["from dash import Dash, dcc, html, Input, Output, callback\n","\n","external_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']\n","\n","app = Dash(__name__, external_stylesheets=external_stylesheets)\n","\n","app.layout = html.Div([\n","    dcc.Input(\n","        id='num-multi',\n","        type='number',\n","        value=5\n","    ),\n","    html.Table([\n","        html.Tr([html.Td(['x', html.Sup(2)]), html.Td(id='square')]),\n","        html.Tr([html.Td(['x', html.Sup(3)]), html.Td(id='cube')]),\n","        html.Tr([html.Td([2, html.Sup('x')]), html.Td(id='twos')]),\n","        html.Tr([html.Td([3, html.Sup('x')]), html.Td(id='threes')]),\n","        html.Tr([html.Td(['x', html.Sup('x')]), html.Td(id='x^x')]),\n","    ]),\n","])\n","\n","\n","@callback(\n","    Output('square', 'children'),\n","    Output('cube', 'children'),\n","    Output('twos', 'children'),\n","    Output('threes', 'children'),\n","    Output('x^x', 'children'),\n","    Input('num-multi', 'value'))\n","def callback_a(x):\n","    return x**2, x**3, 2**x, 3**x, x**x\n","\n","\n","if __name__ == '__main__':\n","    app.run(debug=True)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":690},"id":"wXZ43vBzHzA_","executionInfo":{"status":"ok","timestamp":1701917109114,"user_tz":-540,"elapsed":879,"user":{"displayName":"김형우","userId":"03499405496807914833"}},"outputId":"cf1eba59-587e-4cc5-c9df-c7207e2d6e7e"},"execution_count":6,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Javascript object>"],"application/javascript":["(async (port, path, width, height, cache, element) => {\n","    if (!google.colab.kernel.accessAllowed && !cache) {\n","      return;\n","    }\n","    element.appendChild(document.createTextNode(''));\n","    const url = await google.colab.kernel.proxyPort(port, {cache});\n","    const iframe = document.createElement('iframe');\n","    iframe.src = new URL(path, url).toString();\n","    iframe.height = height;\n","    iframe.width = width;\n","    iframe.style.border = 0;\n","    iframe.allow = [\n","        'accelerometer',\n","        'autoplay',\n","        'camera',\n","        'clipboard-read',\n","        'clipboard-write',\n","        'gyroscope',\n","        'magnetometer',\n","        'microphone',\n","        'serial',\n","        'usb',\n","        'xr-spatial-tracking',\n","    ].join('; ');\n","    element.appendChild(iframe);\n","  })(8050, \"/\", \"100%\", 650, false, window.element)"]},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"XVRwOaWZKiQF"},"execution_count":null,"outputs":[]}]}